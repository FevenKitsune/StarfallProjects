-- Complex Number Class
Complex = {}
Complex.__index = Complex

-- Constructor
function Complex.new(real, imag)
    return setmetatable({real = real or 0, imag = imag or 0}, Complex)
end

-- String Representation (for easy printing)
function Complex:__tostring()
    if self.imag >= 0 then
        return string.format("%g+%gi", self.real, self.imag)
    else
        return string.format("%g%gi", self.real, self.imag)
    end
end

-- Arithmetic Operations
function Complex:__add(other)
    return Complex.new(self.real + other.real, self.imag + other.imag)
end

function Complex:__sub(other)
    return Complex.new(self.real - other.real, self.imag - other.imag)
end

function Complex:__mul(other)
    return Complex.new(
        self.real * other.real - self.imag * other.imag,
        self.real * other.imag + self.imag * other.real
    )
end

function Complex:__div(other)
    local denom = other.real^2 + other.imag^2
    return Complex.new(
        (self.real * other.real + self.imag * other.imag) / denom,
        (self.imag * other.real - self.real * other.imag) / denom
    )
end

function Complex:__unm()
    return Complex.new(-self.real, -self.imag)
end

-- Additional Complex Number Methods
function Complex:conjugate()
    return Complex.new(self.real, -self.imag)
end

function Complex:abs()
    return math.sqrt(self.real^2 + self.imag^2)
end

function Complex:arg()
    return math.atan2(self.imag, self.real)
end