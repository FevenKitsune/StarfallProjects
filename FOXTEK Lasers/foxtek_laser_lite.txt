--@name FOXTEK Laser Lite
--@author FOXTEK (FevenKitsune)
--@client

setupPermissionRequest({ "render.hud" }, "Laser Show!", true)
local permissionSatisfied = hasPermission("render.renderView")

local LaserManager = class("LaserManager")
function LaserManager:initialize(R, Theta, Phi, Color)
    self.R = R
    self.Theta = Theta
    self.Phi = Phi
    self.Color = Color
    
    
    -- https://en.wikipedia.org/wiki/Spherical_coordinate_system
    self.xyz = Vector()
    --self.x = self.R * math.sin(self.Theta) * math.cos(self.Phi)
    --self.y = self.R * math.sin(self.Theta) * math.sin(self.Phi)
    --self.z = self.R * math.cos(self.Theta)
end

function LaserManager:getRay(parent)
    local ray = trace.line( parent:getPos() + parent:getUp() * 1, parent:getPos() + self.xyz )
    return ray
end

function LaserManager:calculateXYZ()
    local rxsintheta = self.R * math.sin(self.Theta)
    self.xyz[1] = rxsintheta * math.cos(self.Phi)
    self.xyz[2] = rxsintheta * math.sin(self.Phi)
    self.xyz[3] = self.R * math.cos(self.Theta)
    -- https://en.wikipedia.org/wiki/Spherical_coordinate_system
    -- self.x = rxsintheta * math.cos(self.Phi)
    -- self.y = rxsintheta * math.sin(self.Phi)
    -- self.z = self.R * math.cos(self.Theta)
end

local fp = false
local n = 50

local Lasers = {}
for i = 1, n do
    Lasers[i] = LaserManager:new(1000, 0, 0, Color(i*(255/n), 0, 255))
end

--timer.create("update_laser", 0.03, 0, function()
hook.add("postdrawopaquerenderables", "update_laser", function(depth, skybox)
    if not permissionSatisfied then return end
    --fp = not fp -- HALF RATE UPDATES
    --if fp then return end
    
    
    for k = 1, #Lasers do
        local rt = timer.realtime
        local sin = math.sin
        local cos = math.cos
        local v = Lasers[k]
        v.Theta = sin( (rt() + (1/n) * k ) * 1 )
        v.Phi = cos( (rt() + (1/n) * k ) * 1 )
        v:calculateXYZ()
        local ray = v:getRay(chip())
        render.setColor( v.Color )
        --render.draw3DBeam( ray.StartPos, ray.HitPos, 0.2, 0, 12.5 )
    end
end)

hook.add("permissionrequest", "", function()
    permissionSatisfied = hasPermission("render.hud")
    if permissionSatisfied then enableHud(nil, true) end
end)
