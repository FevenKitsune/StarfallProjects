--@name FOXTEK Spinner
--@author FOXTEK (Feven)
--@server
--@model models/sprops/rectangles_superthin/size_1_5/rect_6x6.mdl

--[[
@name Holo Setang by HoloL v2
@inputs Gate:entity A 
@persist Az State
@model models/sprops/rectangles_superthin/size_1_5/rect_6x6.mdl

if(first()|dupefinished()){

    holoCreate(1)
    holoPos(1,entity():toWorld(vec(0,0,0)))
    holoParent(1,entity())
    holoAng(1,entity():toWorld(ang(0,0,0)))
    holoScale(1,vec(0.05))
    holoPos(1,entity():toWorld(vec(0,0,0)))
    Gate:parentTo(holoEntity(1))

}
interval(50)
    if(A){
        State=State+25
    }else{
        State=0
        
    }
State=clamp(State,0,999*100)

holoAng(1,entity():toWorld(ang(0,0, State)))
holoPos(1,entity():toWorld(vec(0,0.0*State,-0.0*State)))
]]


local Gate
local DPT = 100 -- degrees per tick

local function init(name, ent)
    if (name == "Gate") then
        print("Entity found!")
        Gate = ent
    end
end

wire.adjustPorts(
    {Gate="entity", A="number"}, -- Inputs
    {} -- Outputs
)

hook.add("Input", "HandleEntityInput", function(name, value)
    if name == "Gate" && value:isValid() then
        -- Initialize entity if entity is valid.
        init(name, value)
    end
end)

hook.add("think", "spin", function()
    local A = wire.ports.A
    if A == 0 then return end
    if (Gate != nil && Gate:isValid()) then
        Gate:setAngles(Gate:localToWorldAngles(Angle(0, DPT, 0)))
    end
end)